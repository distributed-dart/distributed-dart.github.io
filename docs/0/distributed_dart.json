{"dependencies":[{"kind":"library","name":"dart:core","id":"dart.core","comment":"\n\nBuilt-in types, collections,\nand other core functionality for every Dart program.\n\nThis library is automatically imported.\n\nSome classes in this library,\nsuch as [String] and [num],\nsupport Dart's built-in data types.\nOther classes, such as [List] and [Map], provide data structures\nfor managing collections of objects.\nAnd still other classes represent commonly used types of data\nsuch as URIs, dates and times, and errors.\n\n## Numbers and booleans\n\n[int] and [double] provide support for Dart's built-in numerical data types:\nintegers and double-precision floating point numbers, respectively.\nAn object of type [bool] is either true or false.\nVariables of these types can be constructed from literals:\n\n    int meaningOfLife = 42;\n    double valueOfPi  = 3.141592;\n    bool visible      = true;\n\n## Strings and regular expressions\n\nA [String] is immutable and represents a sequence of characters.\n\n    String shakespeareQuote = \"All the world's a stage, ...\";\n\n[StringBuffer] provides a way to construct strings efficiently.\n\n    StringBuffer moreShakespeare = new StringBuffer();\n    moreShakespeare.write('And all the men and women ');\n    moreShakespeare.write('merely players; ...');\n\nThe String and StringBuffer classes implement string concatenation,\ninterpolation, and other string manipulation features.\n\n    String philosophy = 'Live on ';\n    String get palindrome => philosophy + philosophy.split('').reversed.join();\n\n[RegExp] implements Dart regular expressions,\nwhich provide a grammar for matching patterns within text.\nFor example, here's a regular expression that matches\na string of one or more digits:\n\n    var numbers = new RegExp(r'\\d+');\n\nDart regular expressions have the same syntax and semantics as\nJavaScript regular expressions. See\n<http://ecma-international.org/ecma-262/5.1/#sec-15.10>\nfor the specification of JavaScript regular expressions.\n\n## Collections\n\nThe dart:core library provides basic collections,\nsuch as [List], [Map], and [Set].\n\nA List is an ordered collection of objects, with a length.\nLists are sometimes called arrays.\nUse a List when you need to access objects by index.\n\n    List superheroes = [ 'Batman', 'Superman', 'Harry Potter' ];\n\nA Set is an unordered collection of unique objects.\nYou cannot get an item by index (position).\nAdding a duplicate item has no effect.\n\n    Set villians = new Set();\n    villians.add('Joker');\n    villians.addAll( ['Lex Luther', 'Voldemort'] );\n\nA Map is an unordered collection of key-value pairs.\nMaps are sometimes called associative arrays because\nmaps associate a key to some value for easy retrieval.\nKeys are unique.\nUse a Map when you need to access objects\nby a unique identifier.\n\n    Map sidekicks = { 'Batman': 'Robin',\n                      'Superman': 'Lois Lane',\n                      'Harry Potter': 'Ron and Hermione' };\n\nIn addition to these classes,\ndart:core contains [Iterable],\nan interface that defines functionality\ncommon in collections of objects.\nExamples include the ability\nto run a function on each element in the collection,\nto apply a test to each element, \nto retrieve an object, and to determine length.\n\nIterable is implemented by List and Set,\nand used by Map for its keys and values.\n\nFor other kinds of collections, check out the\n[dart:collection](#dart-collection) library.\n\n## Date and time\n\nUse [DateTime] to represent a point in time\nand [Duration] to represent a span of time.\n\nYou can create DateTime objects with constructors\nor by parsing a correctly formatted string.\n\n    DateTime now = new DateTime.now();\n    DateTime berlinWallFell = new DateTime(1989, 11, 9);\n    DateTime moonLanding = DateTime.parse(\"1969-07-20\");\n\nCreate a Duration object specifying the individual time units.\n\n    Duration timeRemaining = new Duration(hours:56, minutes:14);\n\nIn addition to DateTime and Duration,\ndart:core contains the [Stopwatch] class for measuring elapsed time.\n    \n## Uri\n\nA [Uri] object represents a uniform resource identifier,\nwhich identifies a resource on the web.\n\n    Uri dartlang = Uri.parse('http://dartlang.org/');\n    \n## Errors\n\nThe [Error] class represents the occurrence of an error\nduring runtime.\nSubclasses of this class represent specific kinds of errors.\n\n## Other documentation\n\nFor more information about how to use the built-in types, refer to\n[Built-in Types](http://www.dartlang.org/docs/dart-up-and-running/contents/ch02.html#built-in-types)\nin Chapter 2 of\n[Dart: Up and Running](http://www.dartlang.org/docs/dart-up-and-running/).\n\nAlso, see\n[dart:core - Numbers, Collections, Strings, and More](http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-dartcore---strings-collections-and-more)\nfor more coverage of classes in this package.\n\nThe \n[Dart Language Specification](http://www.dartlang.org/docs/spec/)\nprovides technical details.\n","children":[{"kind":"class","name":"Object","id":"Object","comment":"\nThe base class for all Dart objects.\n\nBecause Object is the root of the Dart class hierarchy,\nevery other Dart class is a subclass of Object.\n\nWhen you define a class, you should override [toString]\nto return a string describing an instance of that class.\nYou might also need to define [hashCode] and [==], as described in the\n[Implementing map keys]\n(http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-implementing-map-keys)\nsection of the [library tour]\n(http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html).\n","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"isOperator":true,"kind":"method","name":"==","id":"==1()","comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nOverride this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:\n\n * Total: It must return a boolean for all arguments. It should never throw\n   or return `null`.\n\n * Reflexive: For all objects `o`, `o == o` must be true.\n\n * Symmetric: For all objects `o1` and `o2`, `o1 == o2` and `o2 == o1` must\n   either both be true, or both be false.\n\n * Transitive: For all objects `o1`, `o2`, and `o3`, if `o1 == o2` and\n   `o2 == o3` are true, then `o1 == o3` must be true.\n\nThe method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","children":[{"kind":"param","name":"other","id":"other"}],"line":"59"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","comment":"\nReturns a string representation of this object.\n","line":"78"},{"kind":"method","name":"noSuchMethod","id":"noSuchMethod1()","comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","children":[{"ref":{"name":"Invocation","refId":"dart.core/Invocation"},"kind":"param","name":"invocation","id":"invocation"}],"line":"90"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"hashCode","id":"hashCode","comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","line":"73"},{"ref":{"name":"Type","refId":"dart.core/Type"},"kind":"property","name":"runtimeType","id":"runtimeType","comment":"\nA representation of the runtime type of the object.\n","line":"95"},{"kind":"constructor","name":"","id":"0()","comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","line":"29"}],"uri":"dart-sdk/lib/core/object.dart","line":"21"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"isThrowable":true,"kind":"class","name":"Exception","id":"Exception","comment":"\nA marker interface implemented by all core library exceptions.\n\nAn [Exception] is intended to convey information to the user about a failure,\nso that the error can be addressed programmatically. It is intended to be\ncaught, and it should contain useful data fields.\n\nCreating instances of [Exception] directly with [:new Exception(\"message\"):]\nis discouraged, and only included as a temporary measure during development,\nuntil the actual exceptions used by a library are done.\n","children":[{"returnType":{"name":"Exception","refId":"dart.core/Exception"},"kind":"constructor","name":"","id":"1()","children":[{"isOptional":true,"kind":"param","name":"message","id":"message"}],"line":"21"}],"uri":"dart-sdk/lib/core/exceptions.dart","line":"20"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isThrowable":true,"kind":"class","name":"Error","id":"Error","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"method","name":"safeToString","id":"safeToString1()","comment":"\nSafely convert a value to a [String] description.\n\nThe conversion is guaranteed to not throw, so it won't use the object's\ntoString method.\n","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"object","id":"object"}],"line":"14"},{"returnType":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"method","name":"_objectToString","id":"_objectToString1()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"object","id":"object"}],"isPrivate":true,"line":"65"},{"ref":{"name":"StackTrace","refId":"dart.core/StackTrace"},"kind":"property","name":"stackTrace","id":"stackTrace","line":"67"}],"uri":"dart-sdk/lib/core/errors.dart","line":"7"}],"uri":"dart-sdk/lib/core/core.dart","line":"153"},{"kind":"library","name":"dart:async","id":"dart.async","comment":"\nSupport for asynchronous programming,\nwith classes such as Future and Stream.\n\nFor an introduction to using dart:async, see the\n[dart:async section of the language tour]\n(https://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-asynchronous-programming).\nAlso see\n[articles](https://www.dartlang.org/articles/)\nsuch as\n[Using Future Based APIs]\n(https://www.dartlang.org/articles/using-future-based-apis/).\n","children":[{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"StreamTransformer","refId":"dart.async/StreamTransformer","arguments":[{"name":"S","refId":"dart.async/StreamEventTransformer/S"},{"name":"T","refId":"dart.async/StreamEventTransformer/T"}]}],"kind":"class","name":"StreamEventTransformer","id":"StreamEventTransformer","comment":"\nBase class for transformers that modifies stream events.\n\nA [StreamEventTransformer] transforms incoming Stream\nevents of one kind into outgoing events of (possibly) another kind.\n\nSubscribing on the stream returned by [bind] is the same as subscribing on\nthe source stream, except that events are passed through the [transformer]\nbefore being emitted. The transformer may generate any number and\ntypes of events for each incoming event. Pauses on the returned\nsubscription are forwarded to this stream.\n\nAn example that duplicates all data events:\n\n    class DoubleTransformer<T> extends StreamEventTransformer<T, T> {\n      void handleData(T data, EventSink<T> sink) {\n        sink.add(value);\n        sink.add(value);\n      }\n    }\n    someTypeStream.transform(new DoubleTransformer<Type>());\n\nThe default implementations of the \"handle\" methods forward\nthe events unmodified. If using the default [handleData] the generic type [T]\nneeds to be assignable to [S].\n","children":[{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/StreamEventTransformer/T"}]},"kind":"method","name":"bind","id":"bind1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/StreamEventTransformer/S"}]},"kind":"param","name":"source","id":"source"}],"line":"1084"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"handleData","id":"handleData2()","comment":"\nAct on incoming data event.\n\nThe method may generate any number of events on the sink, but should\nnot throw.\n","children":[{"ref":{"name":"S","refId":"dart.async/StreamEventTransformer/S"},"kind":"param","name":"event","id":"event"},{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"T","refId":"dart.async/StreamEventTransformer/T"}]},"kind":"param","name":"sink","id":"sink"}],"line":"1094"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"handleError","id":"handleError2()","comment":"\nAct on incoming error event.\n\nThe method may generate any number of events on the sink, but should\nnot throw.\n","children":[{"kind":"param","name":"error","id":"error"},{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"T","refId":"dart.async/StreamEventTransformer/T"}]},"kind":"param","name":"sink","id":"sink"}],"line":"1105"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"handleDone","id":"handleDone1()","comment":"\nAct on incoming done event.\n\nThe method may generate any number of events on the sink, but should\nnot throw.\n","children":[{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"T","refId":"dart.async/StreamEventTransformer/T"}]},"kind":"param","name":"sink","id":"sink"}],"line":"1115"},{"kind":"constructor","name":"","id":"0()","line":"1082"},{"kind":"typeparam","name":"S","id":"S"},{"kind":"typeparam","name":"T","id":"T"}],"uri":"dart-sdk/lib/async/stream.dart","line":"1081"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"StreamTransformer","id":"StreamTransformer","comment":"\nThe target of a [Stream.transform] call.\n\nThe [Stream.transform] call will pass itself to this object and then return\nthe resulting stream.\n","children":[{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/StreamTransformer/T"}]},"kind":"method","name":"bind","id":"bind1()","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/StreamTransformer/S"}]},"kind":"param","name":"stream","id":"stream"}],"line":"1051"},{"returnType":{"name":"StreamTransformer","refId":"dart.async/StreamTransformer","arguments":[{"name":"S","refId":"dart.async/StreamTransformer/S"},{"name":"T","refId":"dart.async/StreamTransformer/T"}]},"kind":"constructor","name":"","id":"3()","comment":"\nCreate a [StreamTransformer] that delegates events to the given functions.\n\nThis is actually a [StreamEventTransformer] where the event handling is\nperformed by the function arguments.\nIf an argument is omitted, it acts as the corresponding default method from\n[StreamEventTransformer].\n\nExample use:\n\n    stringStream.transform(new StreamTransformer<String, String>(\n        handleData: (String value, EventSink<String> sink) {\n          sink.add(value);\n          sink.add(value);  // Duplicate the incoming events.\n        }));\n\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"handleData","id":"handleData","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"S","refId":"dart.async/StreamTransformer/S"},"kind":"param","name":"data","id":"data","uri":"dart-sdk/lib/async/stream.dart","line":"1043"},{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"T","refId":"dart.async/StreamTransformer/T"}]},"kind":"param","name":"sink","id":"sink","uri":"dart-sdk/lib/async/stream.dart","line":"1043"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"1043"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"handleError","id":"handleError","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"error","id":"error","uri":"dart-sdk/lib/async/stream.dart","line":"1044"},{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"T","refId":"dart.async/StreamTransformer/T"}]},"kind":"param","name":"sink","id":"sink","uri":"dart-sdk/lib/async/stream.dart","line":"1044"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"1044"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"handleDone","id":"handleDone","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"T","refId":"dart.async/StreamTransformer/T"}]},"kind":"param","name":"sink","id":"sink","uri":"dart-sdk/lib/async/stream.dart","line":"1045"}],"uri":"dart-sdk/lib/core/function.dart","line":"13"}],"line":"1045"}],"line":"1042"},{"kind":"typeparam","name":"S","id":"S"},{"kind":"typeparam","name":"T","id":"T"}],"uri":"dart-sdk/lib/async/stream.dart","line":"1024"}],"uri":"dart-sdk/lib/async/async.dart","line":"18"}],"kind":"library","id":"distributed_dart","children":[{"kind":"method","name":"_spawnIsolateResponseHandler","id":"_spawnIsolateResponseHandler2()","children":[{"kind":"param","name":"request","id":"request"},{"ref":{"name":"NodeAddress","refId":"distributed_dart/NodeAddress"},"kind":"param","name":"sender","id":"sender"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/network/handler/spawnisolateresponsehandler.dart","line":"7"},{"kind":"method","name":"_spawnIsolateHandler","id":"_spawnIsolateHandler2()","children":[{"kind":"param","name":"request","id":"request"},{"ref":{"name":"NodeAddress","refId":"distributed_dart/NodeAddress"},"kind":"param","name":"sender","id":"sender"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/network/handler/spawnisolatehandler.dart","line":"7"},{"kind":"method","name":"_isolateDataHandler","id":"_isolateDataHandler2()","children":[{"kind":"param","name":"request","id":"request"},{"ref":{"name":"NodeAddress","refId":"distributed_dart/NodeAddress"},"kind":"param","name":"senderAddress","id":"senderAddress"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/network/handler/isolatedatahandler.dart","line":"5"},{"kind":"method","name":"_fileRequestHandler","id":"_fileRequestHandler2()","children":[{"kind":"param","name":"request","id":"request"},{"ref":{"name":"NodeAddress","refId":"distributed_dart/NodeAddress"},"kind":"param","name":"senderAddress","id":"senderAddress"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/network/handler/filerequesthandler.dart","line":"5"},{"kind":"method","name":"_fileHandler","id":"_fileHandler2()","children":[{"kind":"param","name":"request","id":"request"},{"ref":{"name":"NodeAddress","refId":"distributed_dart/NodeAddress"},"kind":"param","name":"senderAddress","id":"senderAddress"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/network/handler/filehandler.dart","line":"5"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"_getDefaultWorkDir","id":"_getDefaultWorkDir0()","comment":"Returns a default value for working directory based on running OS.","isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/network/registernode.dart","line":"37"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"registerNode","id":"registerNode3()","children":[{"ref":{"name":"NodeAddress","refId":"distributed_dart/NodeAddress"},"kind":"param","name":"node","id":"node"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"kind":"param","name":"allowremote","id":"allowremote"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"kind":"param","name":"workdir","id":"workdir"}],"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/network/registernode.dart","line":"10"},{"returnType":{"name":"SendPort","refId":"dart.isolate/SendPort"},"kind":"method","name":"spawnUriRemote","id":"spawnUriRemote2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"uri","id":"uri"},{"ref":{"name":"NodeAddress","refId":"distributed_dart/NodeAddress"},"kind":"param","name":"node","id":"node"}],"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/isolates/isolates.dart","line":"171"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"_removeSegmentsOfPath","id":"_removeSegmentsOfPath2()","comment":"\nRemoves a number of segments of a given Path and creates a new Path with\nthe rest of segmenst. E.g.:\n\n    Path p = new Path(\"C:\\\\User\\\\Dart\\\\Programs\\\\Fun\\\\main.dart\");\n    p = _removeSegmentsOfPath(p,3);\n    p == new Path(\"Programs\\\\Fun\\\\main.dart\");\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"filePath","id":"filePath"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"segmentsToRemove","id":"segmentsToRemove"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/dart_import/util/tools.dart","line":"175"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_countEqualSegments","id":"_countEqualSegments1()","comment":"\nFind the number of equal segments in a list of segments:\n\n    List1 = [ \"c\", \"Program Files\", \"Admin\" ]\n    List2 = [ \"c\", \"Users\", \"Admin\", \"Test Data\" ]\n    List3 = [ \"c\", \"Users\", \"Admin\" ]\n\nIn this example we should return 1 because only 1 segment is equal in all\nlists. We don't count equal segments after the first found of non-equal\nlist of segments (so \"Admin\" will not count here\").\n","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]}]},"kind":"param","name":"paths","id":"paths"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/dart_import/util/tools.dart","line":"137"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_shortenPaths","id":"_shortenPaths1()","comment":"\nTakes the path from the DartCode object and all dependencies and removes\nunnecessary parts of the path.  E.g.\n\n    C:\\Users\\Dart\\Code\\Program.dart\n    C:\\Users\\Dart\\Code\\Packages\\important_lib.dart\n    C:\\Users\\Dart\\Code\\Packages\\data\\model.dart\n    C:\\Users\\Dart\\Code\\Packages\\server\\database.dart\n\nThis will change the paths into:\n\n    Program.dart\n    Packages\\important_lib.dart\n    Packages\\data\\model.dart\n    Packages\\server\\database.dart\n\nThe purpose is to make the paths independent of the running system.\n\nThe return value is the number of parts there are deleted from each path.\n","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"_FileNode","refId":"distributed_dart/_FileNode"}]},"kind":"param","name":"dependencies","id":"dependencies"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/dart_import/util/tools.dart","line":"94"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"_Uint8ListToBinaryString","id":"_Uint8ListToBinaryString1()","comment":"\nConvert a [Uint8List] into a String by read each int and convert to a\nbinary value and output the list as e.g.:\n\n    [ 00000000, 00000110, 01001011 ]\n","children":[{"ref":{"name":"Uint8List","refId":"dart.typed_data/Uint8List"},"kind":"param","name":"list","id":"list"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/dart_import/util/tools.dart","line":"49"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"_hashListToString","id":"_hashListToString1()","comment":"\nConvert a List<int> to a String by read each int and convert to hex values.\nUseful for convert a checksum to a String.\n","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"list","id":"list"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/dart_import/util/tools.dart","line":"29"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"_compareLists","id":"_compareLists2()","comment":"\nUse to compare each element in two lists. Returns [true] if the two lists\nis equal size and the elements in the each list is equel:\n","children":[{"ref":{"name":"List","refId":"dart.core/List"},"kind":"param","name":"list1","id":"list1"},{"ref":{"name":"List","refId":"dart.core/List"},"kind":"param","name":"list2","id":"list2"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/dart_import/util/tools.dart","line":"7"},{"kind":"method","name":"_err","id":"_err1()","comment":"\nSend error log message to standard error output. Is only showed if the \n[logging] variable is [true].\n","children":[{"kind":"param","name":"msg","id":"msg"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/log.dart","line":"19"},{"kind":"method","name":"_log","id":"_log1()","comment":"\nSend standard log message to standard output. Is only showed if the \n[logging] variable is [true].\n","children":[{"kind":"param","name":"msg","id":"msg"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/log.dart","line":"13"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_NETWORK_SPAWN_RESPONSE_HANDLER","id":"_NETWORK_SPAWN_RESPONSE_HANDLER","comment":"\nHandler, receives a [_RemoteSendPort] as response to a spawnRemoteUri call\n","isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/network/handler/spawnisolateresponsehandler.dart","line":"6"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_NETWORK_SPAWN_ISOLATE_HANDLER","id":"_NETWORK_SPAWN_ISOLATE_HANDLER","comment":"\nHandler, responsible for setting up an isolate\n","isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/network/handler/spawnisolatehandler.dart","line":"6"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_NETWORK_ISOLATE_DATA_HANDLER","id":"_NETWORK_ISOLATE_DATA_HANDLER","isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/network/handler/isolatedatahandler.dart","line":"3"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_NETWORK_FILE_REQUEST_HANDLER","id":"_NETWORK_FILE_REQUEST_HANDLER","isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/network/handler/filerequesthandler.dart","line":"3"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_NETWORK_FILE_HANDLER","id":"_NETWORK_FILE_HANDLER","isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/network/handler/filehandler.dart","line":"3"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_workDirPath","id":"_workDirPath","comment":"\nset location of received .dart files\nif not intialized, a default directory in a os specific cache folder\nis returned\n","isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/network/registernode.dart","line":"8"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_REMOTE_SENDPORT_MAGIC_COOKIE","id":"_REMOTE_SENDPORT_MAGIC_COOKIE","comment":"\nSendport Proxy\nReference to a specific [_LocalIsolate].\nTo send a [SendPort] to a remote host, it must be wrapped in a\n[_LocalIsolate] and sent as a [_RemoteSendPort]\n","isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/isolates/isolates.dart","line":"55"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"logging","id":"logging","comment":"\nSet to [true] for enabling debug output from the distributed_dart library.\nDefault value is [false].\n","uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/log.dart","line":"7"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_spawnIsolateResponse","id":"_spawnIsolateResponse","comment":"[_spawnIsolateResponseHandler] data type","children":[{"kind":"method","name":"sendTo","id":"sendTo1()","children":[{"ref":{"name":"NodeAddress","refId":"distributed_dart/NodeAddress"},"kind":"param","name":"node","id":"node"}],"line":"24"},{"returnType":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"toJson","id":"toJson0()","line":"28"},{"ref":{"name":"_IsolateId","refId":"distributed_dart/_IsolateId"},"isFinal":true,"kind":"variable","name":"id","id":"id","line":"15"},{"ref":{"name":"_RemoteSendPort","refId":"distributed_dart/_RemoteSendPort"},"isFinal":true,"kind":"variable","name":"rsp","id":"rsp","line":"16"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"_IsolateId","refId":"distributed_dart/_IsolateId"},"initializedField":{"name":"id","refId":"distributed_dart/_spawnIsolateResponse/id"},"kind":"param","name":"id","id":"id"},{"ref":{"name":"_RemoteSendPort","refId":"distributed_dart/_RemoteSendPort"},"initializedField":{"name":"rsp","refId":"distributed_dart/_spawnIsolateResponse/rsp"},"kind":"param","name":"rsp","id":"rsp"}],"line":"18"},{"kind":"constructor","name":"fromJsonMap","id":"fromJsonMap1()","children":[{"ref":{"name":"Map","refId":"dart.core/Map"},"kind":"param","name":"m","id":"m"}],"line":"20"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/network/handler/spawnisolateresponsehandler.dart","line":"14"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_spawnIsolateRequest","id":"_spawnIsolateRequest","comment":"[_spawnIsolateHandler] data type","children":[{"kind":"method","name":"sendTo","id":"sendTo1()","children":[{"ref":{"name":"NodeAddress","refId":"distributed_dart/NodeAddress"},"kind":"param","name":"node","id":"node"}],"line":"33"},{"returnType":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"toJson","id":"toJson0()","line":"36"},{"ref":{"name":"_IsolateId","refId":"distributed_dart/_IsolateId"},"isFinal":true,"kind":"variable","name":"id","id":"id","line":"24"},{"ref":{"name":"_DartProgram","refId":"distributed_dart/_DartProgram"},"isFinal":true,"kind":"variable","name":"code","id":"code","line":"25"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"_IsolateId","refId":"distributed_dart/_IsolateId"},"initializedField":{"name":"id","refId":"distributed_dart/_spawnIsolateRequest/id"},"kind":"param","name":"id","id":"id"},{"ref":{"name":"_DartProgram","refId":"distributed_dart/_DartProgram"},"initializedField":{"name":"code","refId":"distributed_dart/_spawnIsolateRequest/code"},"kind":"param","name":"code","id":"code"}],"line":"27"},{"kind":"constructor","name":"fromJsonMap","id":"fromJsonMap1()","children":[{"ref":{"name":"Map","refId":"dart.core/Map"},"kind":"param","name":"m","id":"m"}],"line":"29"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/network/handler/spawnisolatehandler.dart","line":"23"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_ObjectScanner","id":"_ObjectScanner","comment":"\nScans objects, for SendPort and _RemoteSendPorts, and rewrites them\nUsed to support embedding SendPorts inside the payload of a message.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"checkCycle","id":"checkCycle1()","children":[{"kind":"param","name":"object","id":"object"}],"line":"148"},{"returnType":{"name":"Object","refId":"dart.core/Object"},"kind":"method","name":"replaceSendPort","id":"replaceSendPort1()","comment":"replace SendPort with _RemoteSendPort,","children":[{"kind":"param","name":"object","id":"object"}],"line":"158"},{"returnType":{"name":"Object","refId":"dart.core/Object"},"kind":"method","name":"replaceRemoteSendPort","id":"replaceRemoteSendPort1()","comment":"replace _RemoteSendPort with SendPort,","children":[{"kind":"param","name":"object","id":"object"}],"line":"163"},{"returnType":{"name":"Object","refId":"dart.core/Object"},"kind":"method","name":"_scanAndReplaceObject","id":"_scanAndReplaceObject2()","children":[{"kind":"param","name":"object","id":"object"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"replace","id":"replace"}],"isPrivate":true,"line":"168"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"_SENDPORT","id":"_SENDPORT","isPrivate":true,"line":"143"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"_REMOTESENDPORT","id":"_REMOTESENDPORT","isPrivate":true,"line":"144"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Object","refId":"dart.core/Object"}]},"kind":"variable","name":"seen","id":"seen","line":"146"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/network/streamtransformations.dart","line":"142"},{"superclass":{"name":"StreamEventTransformer","refId":"dart.async/StreamEventTransformer","arguments":[]},"kind":"class","name":"_DataConverter","id":"_DataConverter","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"handleData","id":"handleData2()","children":[{"kind":"param","name":"data","id":"data"},{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[]},"kind":"param","name":"sink","id":"sink"}],"line":"133"},{"ref":{"name":"Converter","refId":"dart.convert/Converter"},"isFinal":true,"kind":"variable","name":"_converter","id":"_converter","isPrivate":true,"line":"130"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"Converter","refId":"dart.convert/Converter"},"initializedField":{"name":"_converter","refId":"distributed_dart/_DataConverter/_converter"},"kind":"param","name":"_converter","id":"_converter","isPrivate":true}],"line":"131"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/network/streamtransformations.dart","line":"129"},{"superclass":{"name":"StreamEventTransformer","refId":"dart.async/StreamEventTransformer"},"kind":"class","name":"_ByteListDecoder","id":"_ByteListDecoder","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"handleData","id":"handleData2()","children":[{"ref":{"name":"Uint8List","refId":"dart.typed_data/Uint8List"},"kind":"param","name":"data","id":"data"},{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"kind":"param","name":"sink","id":"sink"}],"line":"23"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"PKG_SIZE_LENGTH","id":"PKG_SIZE_LENGTH","line":"17"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"remaining","id":"remaining","line":"19"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"variable","name":"obj","id":"obj","line":"20"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"variable","name":"sizeBuffer","id":"sizeBuffer","line":"21"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/network/streamtransformations.dart","line":"16"},{"superclass":{"name":"StreamEventTransformer","refId":"dart.async/StreamEventTransformer"},"kind":"class","name":"_ByteListEncoder","id":"_ByteListEncoder","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"handleData","id":"handleData2()","children":[{"ref":{"name":"List","refId":"dart.core/List"},"kind":"param","name":"data","id":"data"},{"ref":{"name":"EventSink","refId":"dart.async/EventSink"},"kind":"param","name":"sink","id":"sink"}],"line":"6"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/network/streamtransformations.dart","line":"5"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_RequestHandler","id":"_RequestHandler","children":[{"isStatic":true,"kind":"method","name":"allow","id":"allow1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"handler","id":"handler"}],"line":"9"},{"isStatic":true,"kind":"method","name":"disallow","id":"disallow1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"handler","id":"handler"}],"line":"10"},{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"notify","id":"notify1()","children":[{"ref":{"name":"Map","refId":"dart.core/Map"},"kind":"param","name":"jsonMap","id":"jsonMap"}],"line":"12"},{"returnType":{"name":"Map","refId":"dart.core/Map"},"isStatic":true,"kind":"method","name":"annotateData","id":"annotateData2()","comment":"\nWrap data in map with type and sender annotation\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"type","id":"type"},{"kind":"param","name":"data","id":"data"}],"line":"50"},{"ref":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"variable","name":"REQUEST_TYPE","id":"REQUEST_TYPE","line":"4"},{"ref":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"variable","name":"NODE_ADDRESS","id":"NODE_ADDRESS","line":"5"},{"ref":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"variable","name":"DATA","id":"DATA","line":"6"},{"ref":{"name":"Set","refId":"dart.core/Set","arguments":[{"name":"String","refId":"dart.core/String"}]},"isStatic":true,"kind":"variable","name":"allowed","id":"allowed","line":"7"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/network/requesthandler.dart","line":"3"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"NodeAddress","id":"NodeAddress","comment":"\nAdd something here.\n","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"20"},{"returnType":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"toJson","id":"toJson0()","line":"22"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"isOperator":true,"kind":"method","name":"==","id":"==1()","children":[{"kind":"param","name":"other","id":"other"}],"line":"33"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"hashCode","id":"hashCode","comment":"identical and '==' overload","line":"32"},{"isStatic":true,"kind":"variable","name":"_HOST","id":"_HOST","isPrivate":true,"line":"7"},{"isStatic":true,"kind":"variable","name":"_PORT","id":"_PORT","isPrivate":true,"line":"8"},{"ref":{"name":"NodeAddress","refId":"distributed_dart/NodeAddress"},"isStatic":true,"kind":"variable","name":"_localhost","id":"_localhost","isPrivate":true,"line":"9"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"host","id":"host","line":"11"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"port","id":"port","line":"12"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"host","refId":"distributed_dart/NodeAddress/host"},"kind":"param","name":"host","id":"host"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"12345","isOptional":true,"initializedField":{"name":"port","refId":"distributed_dart/NodeAddress/port"},"kind":"param","name":"port","id":"port"}],"line":"14"},{"returnType":{"name":"NodeAddress","refId":"distributed_dart/NodeAddress"},"kind":"constructor","name":"fromJsonMap","id":"fromJsonMap1()","children":[{"ref":{"name":"Map","refId":"dart.core/Map"},"kind":"param","name":"jsonMap","id":"jsonMap"}],"line":"16"}],"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/network/nodeaddress.dart","line":"6"},{"superclass":{"name":"StreamEventTransformer","refId":"dart.async/StreamEventTransformer","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"kind":"class","name":"_JsonLogger","id":"_JsonLogger","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"handleData","id":"handleData2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"data","id":"data"},{"ref":{"name":"EventSink","refId":"dart.async/EventSink","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"param","name":"sink","id":"sink"}],"line":"83"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"name","id":"name","line":"79"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"name","refId":"distributed_dart/_JsonLogger/name"},"kind":"param","name":"name","id":"name"}],"line":"81"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/network/network.dart","line":"78"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_Network","id":"_Network","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"send","id":"send2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"type","id":"type"},{"kind":"param","name":"data","id":"data"}],"line":"17"},{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"_initServer","id":"_initServer0()","isPrivate":true,"line":"42"},{"kind":"method","name":"_outgoing","id":"_outgoing1()","comment":"outging data is encoded, and sent via the shared socket","children":[{"ref":{"name":"Socket","refId":"dart.io/Socket"},"kind":"param","name":"socket","id":"socket"}],"isPrivate":true,"line":"55"},{"isStatic":true,"kind":"method","name":"_incomming","id":"_incomming1()","comment":"all incomming data will be handled by the [_RequestHandler]","children":[{"ref":{"name":"Socket","refId":"dart.io/Socket"},"kind":"param","name":"socket","id":"socket"}],"isPrivate":true,"line":"66"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"NodeAddress","refId":"distributed_dart/NodeAddress"},{"name":"_Network","refId":"distributed_dart/_Network"}]},"isStatic":true,"kind":"variable","name":"_connections","id":"_connections","comment":"only one connection for each remote host, shared by all","isPrivate":true,"line":"6"},{"ref":{"name":"StreamController","refId":"dart.async/StreamController"},"kind":"variable","name":"_sc","id":"_sc","isPrivate":true,"line":"13"},{"ref":{"name":"NodeAddress","refId":"distributed_dart/NodeAddress"},"kind":"variable","name":"_node","id":"_node","isPrivate":true,"line":"15"},{"kind":"constructor","name":"_connect","id":"_connect1()","comment":"Connect to remote host","children":[{"ref":{"name":"NodeAddress","refId":"distributed_dart/NodeAddress"},"initializedField":{"name":"_node","refId":"distributed_dart/_Network/_node"},"kind":"param","name":"_node","id":"_node","isPrivate":true}],"isPrivate":true,"line":"23"},{"returnType":{"name":"_Network","refId":"distributed_dart/_Network"},"kind":"constructor","name":"","id":"1()","comment":"return a shared network object for each unique ","children":[{"ref":{"name":"NodeAddress","refId":"distributed_dart/NodeAddress"},"kind":"param","name":"node","id":"node"}],"line":"34"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/network/network.dart","line":"3"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_SendPortDb","id":"_SendPortDb","children":[{"isStatic":true,"kind":"method","name":"add","id":"add2()","children":[{"ref":{"name":"SendPort","refId":"dart.isolate/SendPort"},"kind":"param","name":"sp","id":"sp"},{"ref":{"name":"_RemoteSendPort","refId":"distributed_dart/_RemoteSendPort"},"kind":"param","name":"rsp","id":"rsp"}],"line":"7"},{"isStatic":true,"kind":"method","name":"getRemoteSendPort","id":"getRemoteSendPort1()","children":[{"ref":{"name":"SendPort","refId":"dart.isolate/SendPort"},"kind":"param","name":"sp","id":"sp"}],"line":"19"},{"isStatic":true,"kind":"method","name":"getSendPort","id":"getSendPort1()","children":[{"ref":{"name":"_RemoteSendPort","refId":"distributed_dart/_RemoteSendPort"},"kind":"param","name":"rsp","id":"rsp"}],"line":"24"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"_RemoteSendPort","refId":"distributed_dart/_RemoteSendPort"},{"name":"SendPort","refId":"dart.isolate/SendPort"}]},"isStatic":true,"kind":"variable","name":"remoteToPort","id":"remoteToPort","line":"4"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"SendPort","refId":"dart.isolate/SendPort"},{"name":"_RemoteSendPort","refId":"distributed_dart/_RemoteSendPort"}]},"isStatic":true,"kind":"variable","name":"portToRemote","id":"portToRemote","line":"5"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/isolates/sendportdb.dart","line":"3"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_RemoteProxy","id":"_RemoteProxy","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"_RemoteSendPort","refId":"distributed_dart/_RemoteSendPort"}]},"isStatic":true,"kind":"method","name":"subscribe","id":"subscribe1()","comment":"returns a future, which is completed when the node is notified by\na requesthandler","children":[{"ref":{"name":"_IsolateId","refId":"distributed_dart/_IsolateId"},"kind":"param","name":"requestid","id":"requestid"}],"line":"156"},{"isStatic":true,"kind":"method","name":"notify","id":"notify2()","children":[{"kind":"param","name":"_IsolateId","id":"_IsolateId","isPrivate":true},{"kind":"param","name":"_RemoteSendPort","id":"_RemoteSendPort","isPrivate":true}],"line":"165"},{"ref":{"name":"Map","refId":"dart.core/Map"},"isStatic":true,"kind":"variable","name":"subscribers","id":"subscribers","comment":"requestid mapped to functions that completes a future","line":"152"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/isolates/isolates.dart","line":"150"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_LocalIsolate","id":"_LocalIsolate","comment":"\nLookup table, contains reference to all physical isolates spawned on the\ncurrent Node.\n\nThe table contains a mapping between an [_IsolateId] and a [SendPort]\n[SendPort]'s can be created manually, and bound to a [_LocalIsolate]\nobject, or it can be created directly in via a [_LocalIsolate] constructor.\n","children":[{"returnType":{"name":"_RemoteSendPort","refId":"distributed_dart/_RemoteSendPort"},"kind":"method","name":"toRemoteSendPort","id":"toRemoteSendPort0()","line":"124"},{"returnType":{"name":"_LocalIsolate","refId":"distributed_dart/_LocalIsolate"},"isStatic":true,"kind":"method","name":"Lookup","id":"Lookup1()","comment":"\nSearch for [_LocalIsolate] instance\nreturns null if isolate does not exist.\n","children":[{"ref":{"name":"_IsolateId","refId":"distributed_dart/_IsolateId"},"kind":"param","name":"id","id":"id"}],"line":"130"},{"ref":{"name":"_IsolateId","refId":"distributed_dart/_IsolateId"},"isFinal":true,"kind":"variable","name":"id","id":"id","line":"117"},{"ref":{"name":"SendPort","refId":"dart.isolate/SendPort"},"isFinal":true,"kind":"variable","name":"sendport","id":"sendport","line":"118"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"_IsolateId","refId":"distributed_dart/_IsolateId"},{"name":"_LocalIsolate","refId":"distributed_dart/_LocalIsolate"}]},"isStatic":true,"kind":"variable","name":"_isolatemap","id":"_isolatemap","comment":"[_LocalIsolate] lookup table, key is (string) IsolateId","isPrivate":true,"line":"121"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"SendPort","refId":"dart.isolate/SendPort"},{"name":"_LocalIsolate","refId":"distributed_dart/_LocalIsolate"}]},"isStatic":true,"kind":"variable","name":"_sendportmap","id":"_sendportmap","isPrivate":true,"line":"122"},{"kind":"constructor","name":"_create","id":"_create1()","children":[{"ref":{"name":"SendPort","refId":"dart.isolate/SendPort"},"initializedField":{"name":"sendport","refId":"distributed_dart/_LocalIsolate/sendport"},"kind":"param","name":"sendport","id":"sendport"}],"isPrivate":true,"line":"136"},{"returnType":{"name":"_LocalIsolate","refId":"distributed_dart/_LocalIsolate"},"kind":"constructor","name":"","id":"1()","comment":"bind a new sendport to the [_LocalIsolate] lookup table","children":[{"ref":{"name":"SendPort","refId":"dart.isolate/SendPort"},"kind":"param","name":"port","id":"port"}],"line":"142"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/isolates/isolates.dart","line":"116"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_RemoteSendPort","id":"_RemoteSendPort","children":[{"returnType":{"name":"SendPort","refId":"dart.isolate/SendPort"},"kind":"method","name":"toSendPort","id":"toSendPort0()","line":"79"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"send","id":"send2()","children":[{"kind":"param","name":"msg","id":"msg"},{"ref":{"name":"_RemoteSendPort","refId":"distributed_dart/_RemoteSendPort"},"kind":"param","name":"reply","id":"reply"}],"line":"88"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"call","id":"call1()","children":[{"kind":"param","name":"data","id":"data"}],"line":"94"},{"returnType":{"name":"Map","refId":"dart.core/Map"},"kind":"method","name":"toJson","id":"toJson0()","line":"105"},{"ref":{"name":"_IsolateId","refId":"distributed_dart/_IsolateId"},"isFinal":true,"kind":"variable","name":"id","id":"id","line":"67"},{"ref":{"name":"NodeAddress","refId":"distributed_dart/NodeAddress"},"isFinal":true,"kind":"variable","name":"node","id":"node","line":"68"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"RSPID","id":"RSPID","line":"69"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"_IsolateId","refId":"distributed_dart/_IsolateId"},"initializedField":{"name":"id","refId":"distributed_dart/_RemoteSendPort/id"},"kind":"param","name":"id","id":"id"}],"line":"71"},{"kind":"constructor","name":"fromJsonMap","id":"fromJsonMap1()","children":[{"ref":{"name":"Map","refId":"dart.core/Map"},"kind":"param","name":"m","id":"m"}],"line":"74"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/isolates/isolates.dart","line":"66"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_IsolateId","id":"_IsolateId","comment":"\nunique ID to distinguish isolates\n","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"25"},{"returnType":{"name":"Map","refId":"dart.core/Map"},"kind":"method","name":"toJson","id":"toJson0()","line":"27"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"isOperator":true,"kind":"method","name":"==","id":"==1()","children":[{"kind":"param","name":"other","id":"other"}],"line":"38"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"hashCode","id":"hashCode","comment":"identical and '==' overload","line":"37"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"nextid","id":"nextid","line":"7"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"id","id":"id","line":"9"},{"ref":{"name":"NodeAddress","refId":"distributed_dart/NodeAddress"},"isFinal":true,"kind":"variable","name":"node","id":"node","line":"10"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"ts","id":"ts","line":"11"},{"kind":"constructor","name":"","id":"0()","line":"13"},{"kind":"constructor","name":"fromJsonMap","id":"fromJsonMap1()","children":[{"ref":{"name":"Map","refId":"dart.core/Map"},"kind":"param","name":"map","id":"map"}],"line":"19"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/isolates/isolates.dart","line":"6"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_Scanner","id":"_Scanner","comment":"\nSimple scanner implementation to scan for dependencies in Dart files. The\nscanner will automatically stop when no more import statements is possible.\nMore information can be found in the\n[Dart Language Specification](http://goo.gl/rhiyX).\n\n_Highly inspired by the Dart project's own \n[scanner.dart](http://goo.gl/Ut5w7). The main difference is we don't need to\nscan for the whole language but only need a small subset. Also we want to\nmake it easy to get details like import statements directly without need of\nparsing tokens._\n","children":[{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"getDependencies","id":"getDependencies0()","comment":"\nScan instance of [Runes] given on initialization. Returns a list of Strings\nwhere each string is the URI from an import statement. Please notice the\npossibility to get URI's like 'dart:async'.\n","line":"43"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_peek","id":"_peek0()","isPrivate":true,"line":"66"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_byteAt","id":"_byteAt1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"}],"isPrivate":true,"line":"68"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_advance","id":"_advance0()","isPrivate":true,"line":"70"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_bigSwitch","id":"_bigSwitch1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"next","id":"next"}],"isPrivate":true,"line":"72"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_tokenizeRawStringKeywordOrIdentifier","id":"_tokenizeRawStringKeywordOrIdentifier1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"next","id":"next"}],"isPrivate":true,"line":"120"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_tokenizeKeywordOrIdentifier","id":"_tokenizeKeywordOrIdentifier2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"next","id":"next"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"allowDollar","id":"allowDollar"}],"isPrivate":true,"line":"132"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_tokenizeString","id":"_tokenizeString3()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"next","id":"next"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"raw","id":"raw"}],"isPrivate":true,"line":"177"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_tokenizeSingleLineRawString","id":"_tokenizeSingleLineRawString3()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"next","id":"next"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"quoteChar","id":"quoteChar"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"}],"isPrivate":true,"line":"199"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_tokenizeSingleLineString","id":"_tokenizeSingleLineString3()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"next","id":"next"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"quoteChar","id":"quoteChar"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"}],"isPrivate":true,"line":"214"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_tokenizeSlashOrComment","id":"_tokenizeSlashOrComment1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"next","id":"next"}],"isPrivate":true,"line":"235"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_tokenizeMultiLineComment","id":"_tokenizeMultiLineComment1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"next","id":"next"}],"isPrivate":true,"line":"249"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_tokenizeSingleLineComment","id":"_tokenizeSingleLineComment1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"next","id":"next"}],"isPrivate":true,"line":"282"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_tokenizeMultiLineRawString","id":"_tokenizeMultiLineRawString2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"quoteChar","id":"quoteChar"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"}],"isPrivate":true,"line":"296"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_tokenizeMultiLineString","id":"_tokenizeMultiLineString3()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"quoteChar","id":"quoteChar"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"raw","id":"raw"}],"isPrivate":true,"line":"318"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_tokenizeAt","id":"_tokenizeAt1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"next","id":"next"}],"isPrivate":true,"line":"347"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_tokenizeTag","id":"_tokenizeTag1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"next","id":"next"}],"isPrivate":true,"line":"395"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"_utf8String","id":"_utf8String2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"offset","id":"offset"}],"isPrivate":true,"line":"411"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_error","id":"_error1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"message","id":"message"}],"isPrivate":true,"line":"417"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"_appendPath","id":"_appendPath2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"returnValueIfAppended","id":"returnValueIfAppended"}],"isPrivate":true,"line":"422"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_appendComment","id":"_appendComment0()","isPrivate":true,"line":"432"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"variable","name":"_bytes","id":"_bytes","isPrivate":true,"line":"16"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_byteOffset","id":"_byteOffset","isPrivate":true,"line":"17"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"variable","name":"_dependencies","id":"_dependencies","isPrivate":true,"line":"18"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_nextTokenIsImportant","id":"_nextTokenIsImportant","isPrivate":true,"line":"27"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_keywordBefore","id":"_keywordBefore","isPrivate":true,"line":"28"},{"kind":"constructor","name":"","id":"1()","comment":"\nCreate new instance of [_Scanner] to parse a instance of [Runes]. The \ninstance of [Runes] should contain the content of a syntax valid Dart file.\n","children":[{"ref":{"name":"Runes","refId":"dart.core/Runes"},"kind":"param","name":"sourcecode","id":"sourcecode"}],"line":"34"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/dart_import/scanner.dart","line":"15"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_RequestBundle","id":"_RequestBundle","comment":"\nIs only used to easier to collect a list of files there are needed to be \ndownloaded from another computer. The file to be downloaded is represented \nby the [fileHash] value and when the file is downloaded it should be saved as \n[hashFilePath]. At last there should be created a link between [hashFilePath] \nand [filePath].\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"createLink","id":"createLink0()","comment":"Create link a link saved as [filePath] and links to [hashFilePath].","line":"24"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"saveFile","id":"saveFile1()","comment":"Save [data] into the file [hashFilePath].","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"data","id":"data"}],"line":"29"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"kind":"method","name":"saveFileAndCreateLink","id":"saveFileAndCreateLink1()","comment":"\nCalls both [saveFile] and [createLink] and returns a future there \ncompletes when both functions is finish. \n","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"data","id":"data"}],"line":"37"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"isOperator":true,"kind":"method","name":"==","id":"==1()","children":[{"kind":"param","name":"other","id":"other"}],"line":"43"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"hashCode","id":"hashCode","line":"41"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"fileHash","id":"fileHash","comment":"Hash value to request.","line":"12"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"hashFilePath","id":"hashFilePath","comment":"Path the downloaded file should be saved.","line":"15"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"filePath","id":"filePath","comment":"Path to link there should link to [hashFilePath].","line":"18"},{"kind":"constructor","name":"","id":"3()","comment":"Create a [_RequestBundle] object.","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"fileHash","refId":"distributed_dart/_RequestBundle/fileHash"},"kind":"param","name":"fileHash","id":"fileHash"},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"hashFilePath","refId":"distributed_dart/_RequestBundle/hashFilePath"},"kind":"param","name":"hashFilePath","id":"hashFilePath"},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"filePath","refId":"distributed_dart/_RequestBundle/filePath"},"kind":"param","name":"filePath","id":"filePath"}],"line":"21"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/dart_import/request_bundle.dart","line":"10"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_DownloadRequest","id":"_DownloadRequest","children":[{"ref":{"name":"Completer","refId":"dart.async/Completer","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"isFinal":true,"kind":"variable","name":"completer","id":"completer","line":"4"},{"ref":{"name":"Future","refId":"dart.async/Future"},"kind":"variable","name":"future","id":"future","line":"5"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"destinationPath","id":"destinationPath"}],"line":"7"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/dart_import/download_request.dart","line":"3"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_DartCodeDb","id":"_DartCodeDb","comment":"\nContains only static methods and variables (but is placed inside a class to \nencapsulate). The purpose of these methods is to give access to various IO \noperations in the library.\n\nAnother detail is the class also contains static data to be used as cache in \nvarious places. The cache contains content from files there have been loaded \nbefore. The purpose is to give fast access to this data without waiting for \nthe disk.\n","children":[{"returnType":{"name":"Future","refId":"dart.async/Future"},"isStatic":true,"kind":"method","name":"downloadAndLinkFiles","id":"downloadAndLinkFiles2()","comment":"\nCheck file requests and create network requests for files we not already\nhave requested. The returned [Future] is completed when all requested \nfiles is saved on disk.\n\n*REMEMBER:* Files are saved in the hashes folder and links is not created.\nLinks should be created for files after the future is completed.\n","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"_RequestBundle","refId":"distributed_dart/_RequestBundle"}]},"kind":"param","name":"requests","id":"requests"},{"ref":{"name":"NodeAddress","refId":"distributed_dart/NodeAddress"},"kind":"param","name":"sender","id":"sender","line":"53"}],"line":"52"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"_DartProgram","refId":"distributed_dart/_DartProgram"}]},"isStatic":true,"kind":"method","name":"resolveDartProgram","id":"resolveDartProgram2()","comment":"\nCreate [_DartProgram] object from URI to a valid Dart program. The \n[_DartProgram] object contains information about all dependencies for \nthe program.\n\n[useCache] should be set to false if some of the files has been changed\non the filesystem while the program has been running.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"uri","id":"uri"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"useCache","id":"useCache","line":"102"}],"line":"101"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"_FileNode","refId":"distributed_dart/_FileNode"}]},"isStatic":true,"kind":"method","name":"_resolve","id":"_resolve3()","comment":"\nResolve a URI into a [_FileNode] object. This method looks like the \nsame as [DartCodeDb.resolveDartProgram] but the main difference is this \nmethod returns a [_FileNode] object when the \n[DartCodeDb.resolveDartProgram] method returns a [_DartProgram] object. \nThe reason for this design is [DartCodeDb._resolve] is designed to be \ncalled recursive.\n\n[useCache] should be set to false if some of the files has been changed\non the filesystem while the program has been running.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"filePath","id":"filePath"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"packageDir","id":"packageDir","line":"129"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"useCache","id":"useCache","line":"130"}],"isPrivate":true,"line":"128"},{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"clearFileContentCache","id":"clearFileContentCache2()","comment":"\nClear the cache containing the content of files there has been read before.\nThe reason why there is only one method is it doesn’t make much sense to \nclear the other caches without clean the file content cache.\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"clearHashToPathCache","id":"clearHashToPathCache"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"isNamed":true,"kind":"param","name":"clearDartCodeCache","id":"clearDartCodeCache","line":"311"}],"line":"310"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]},"isStatic":true,"kind":"method","name":"getSourceFromHash","id":"getSourceFromHash2()","comment":"\nResolve hash checksum into the content of the actual file. The files there\nare possible to resolve is files there are already read by other pieces of\ncode in the program.\n\nThrow [FileChangedException] in case of the cache has been cleared and the\nfile is changed (if the new hash checksum is not the same as the\nrequested).\n\n[canAddToCache] is used if the file content of the needed file is removed\nby cleaning the cache. By using a cache it is possible to resolve the path\nby using the hash. If [canAddToCache] is false the content cache will not\nbe updated with the content of the loaded file.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"hash","id":"hash"},{"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"canAddToCache","id":"canAddToCache"}],"line":"337"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"isStatic":true,"kind":"method","name":"createLink","id":"createLink2()","comment":"\nThis method exists because Windows don’t support symlinks (or similar \nfeature) for files without additional permissions. Because of this \nrestriction it is not possible to use the Dart class \n[Link](http://api.dartlang.org/docs/releases/latest/dart_io/Link.html) on \nWindows systems. The purpose of the method is therefore to use different \nimplementation on different systems.\n\nOn Windows we use hardlinks because they are possible to use without \nadditional permissions. Dart do not support creating hardlinks so we call \nthe [:mklink:] command from the Windows cmd instead.\n\nOn all other systems we use the \n[Link](http://api.dartlang.org/docs/releases/latest/dart_io/Link.html) \nclass to create symlinks.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"sourcePath","id":"sourcePath"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"destinationPath","id":"destinationPath"}],"line":"407"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"_FileNode","refId":"distributed_dart/_FileNode"}]}]},"isStatic":true,"kind":"variable","name":"_pathToFileNode","id":"_pathToFileNode","isPrivate":true,"line":"21"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]}]}]},"isStatic":true,"kind":"variable","name":"_sourceCache","id":"_sourceCache","isPrivate":true,"line":"31"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"isStatic":true,"kind":"variable","name":"_hashToPathCache","id":"_hashToPathCache","isPrivate":true,"line":"39"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"_DownloadRequest","refId":"distributed_dart/_DownloadRequest"}]},"isStatic":true,"kind":"variable","name":"_downloadQueue","id":"_downloadQueue","isPrivate":true,"line":"42"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/dart_import/dart_code_db.dart","line":"13"},{"superclass":{"name":"_DependencyNode","refId":"distributed_dart/_DependencyNode"},"kind":"class","name":"_DartProgram","id":"_DartProgram","comment":"\nThe purpose of this class is to represent a Dart program and its \ndependencies and make it possible to send and receive the object as JSON. \nAll dependencies are represented as a set of unique [_FileNode] objects.\n","children":[{"returnType":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"Object","refId":"dart.core/Object"}]},"kind":"method","name":"toJson","id":"toJson0()","line":"100"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"createSpawnUriEnvironment","id":"createSpawnUriEnvironment1()","comment":"\nCreate an environment for the [_DartProgram] and all dependencies and \nreturn the path to run (with e.g. [spawnUri]) as a [Future]. Missing \nfiles will be downloaded. The created environment will be placed in \nthe [_workDirPath] directory where also a cache will be created for \npreviously dowloaded files.\n","children":[{"ref":{"name":"NodeAddress","refId":"distributed_dart/NodeAddress"},"kind":"param","name":"sender","id":"sender"}],"line":"129"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"treeHash","id":"treeHash","comment":"\nReturns a calculated SHA1 checksum for the [_DartProgram] object and all \nthe dependencies.  The purpose of this checksum is to make sure the \nchecksum is different if there are changes in one of the dependencies.\n","line":"89"},{"ref":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"variable","name":"_NAME","id":"_NAME","isPrivate":true,"line":"9"},{"ref":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"variable","name":"_PATH","id":"_PATH","isPrivate":true,"line":"10"},{"ref":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"variable","name":"_HASH","id":"_HASH","isPrivate":true,"line":"11"},{"ref":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"variable","name":"_DEPENDENCIES","id":"_DEPENDENCIES","isPrivate":true,"line":"12"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_treeHashCache","id":"_treeHashCache","isPrivate":true,"line":"82"},{"kind":"constructor","name":"_internal","id":"_internal3()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"filePath","id":"filePath"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"hash","id":"hash"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"_FileNode","refId":"distributed_dart/_FileNode"}]},"kind":"param","name":"deps","id":"deps"}],"isPrivate":true,"line":"14"},{"returnType":{"name":"_DartProgram","refId":"distributed_dart/_DartProgram"},"kind":"constructor","name":"","id":"1()","comment":"\nCreate [_DartProgram] instance from [_FileNode] or [_DependencyNode] \ninstance.\n\nAll dependencies are converted to [_FileNode] instances and all paths are \nrelative to the [_DartProgram]. Because the paths are changed, the \n[_DartProgram] instance will contain copies of [_FileNode] instances and \nnot the actual [_FileNode] instances.\n","children":[{"kind":"param","name":"program","id":"program"}],"line":"26"},{"returnType":{"name":"_DartProgram","refId":"distributed_dart/_DartProgram"},"kind":"constructor","name":"fromMap","id":"fromMap1()","comment":"Create [_DartProgram] from [Map] created by parsing a JSON object.","children":[{"ref":{"name":"Map","refId":"dart.core/Map"},"kind":"param","name":"jsonMap","id":"jsonMap"}],"line":"62"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/dart_import/dart_program.dart","line":"8"},{"superclass":{"name":"_FileNode","refId":"distributed_dart/_FileNode"},"kind":"class","name":"_DependencyNode","id":"_DependencyNode","comment":"Represents a file in the tree with dependencies. (e.g. Dart file)","children":[{"returnType":{"name":"Set","refId":"dart.core/Set","arguments":[{"name":"_FileNode","refId":"distributed_dart/_FileNode"}]},"kind":"method","name":"getFileNodes","id":"getFileNodes1()","comment":"\nReturns a list of the object itself and all dependencies. The object\nitself returned is a copy there is converted to a [_FileNode] instance.\n\nAll dependencies of the type [_DependencyNode] is also converted to\n[_FileNode] instances. The purpose is to get a Set of all unique\ndependencies there is needed for this node without any equal files.\n\nThe optional [set] parameter is the [Set] there will be used to hold all \n[_FileNode] instances. If no Set is given as parameter a new one is created.\n\nThe return value is the [Set] containing the dependencies.\n","children":[{"ref":{"name":"Set","refId":"dart.core/Set","arguments":[{"name":"_FileNode","refId":"distributed_dart/_FileNode"}]},"isOptional":true,"kind":"param","name":"set","id":"set"}],"line":"31"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"isOperator":true,"kind":"method","name":"==","id":"==1()","children":[{"kind":"param","name":"other","id":"other"}],"line":"45"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"_FileNode","refId":"distributed_dart/_FileNode"}]},"kind":"property","name":"dependencies","id":"dependencies","comment":"\nDependencies for the file this object represent. Dependencies can both be\n[_FileNode] and [_DependencyNode] objects.\n","line":"11"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"hashCode","id":"hashCode","line":"43"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"_FileNode","refId":"distributed_dart/_FileNode"}]},"kind":"variable","name":"_dependencies","id":"_dependencies","isPrivate":true,"line":"5"},{"kind":"constructor","name":"","id":"3()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"param","name":"fileHash","id":"fileHash","line":"14"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"_FileNode","refId":"distributed_dart/_FileNode"}]},"initializedField":{"name":"_dependencies","refId":"distributed_dart/_DependencyNode/_dependencies"},"kind":"param","name":"_dependencies","id":"_dependencies","isPrivate":true,"line":"15"}],"line":"13"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/dart_import/tree/dependency_node.dart","line":"4"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_FileNode","id":"_FileNode","comment":"Represents a file in the tree without dependencies.","children":[{"returnType":{"name":"Set","refId":"dart.core/Set","arguments":[{"name":"_FileNode","refId":"distributed_dart/_FileNode"}]},"kind":"method","name":"getFileNodes","id":"getFileNodes1()","comment":"Insert this object into a [Set] and return the [Set]. If [set] is\nprovided the method will use this [Set] instead of creating a new one.","children":[{"ref":{"name":"Set","refId":"dart.core/Set","arguments":[{"name":"_FileNode","refId":"distributed_dart/_FileNode"}]},"isOptional":true,"kind":"param","name":"set","id":"set"}],"line":"25"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"isOperator":true,"kind":"method","name":"==","id":"==1()","children":[{"kind":"param","name":"other","id":"other"}],"line":"38"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"name","id":"name","comment":"File name of the file the object represent.","line":"11"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"filePath","id":"filePath","comment":"[Path] to the file the object represent.","line":"14"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"fileHashString","id":"fileHashString","comment":"SHA1 checksum of the file the object represent as a [String].","line":"17"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"property","name":"fileHash","id":"fileHash","comment":"SHA1 checksum of the file the object represent as a [List<int>]. The \nreturned list is not growable.","line":"21"},{"ref":{"name":"_FileNode","refId":"distributed_dart/_FileNode"},"kind":"property","name":"copy","id":"copy","comment":"Returns a copy of this object.","line":"34"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"hashCode","id":"hashCode","line":"36"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_filePath","id":"_filePath","isPrivate":true,"line":"5"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"kind":"variable","name":"_fileHash","id":"_fileHash","isPrivate":true,"line":"6"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"_filePath","refId":"distributed_dart/_FileNode/_filePath"},"kind":"param","name":"_filePath","id":"_filePath","isPrivate":true},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"initializedField":{"name":"_fileHash","refId":"distributed_dart/_FileNode/_fileHash"},"kind":"param","name":"_fileHash","id":"_fileHash","isPrivate":true}],"line":"8"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/dart_import/tree/file_node.dart","line":"4"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"_U","id":"_U","comment":"\nUnicode (UTF-8) characters\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$EOF","id":"$EOF","line":"11"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$STX","id":"$STX","line":"12"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$BS","id":"$BS","line":"13"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$TAB","id":"$TAB","line":"14"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$LF","id":"$LF","line":"15"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$VTAB","id":"$VTAB","line":"16"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$FF","id":"$FF","line":"17"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$CR","id":"$CR","line":"18"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$SPACE","id":"$SPACE","line":"19"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$BANG","id":"$BANG","line":"20"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$DQ","id":"$DQ","line":"21"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$HASH","id":"$HASH","line":"22"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$$","id":"$$","line":"23"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$PERCENT","id":"$PERCENT","line":"24"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$AMPERSAND","id":"$AMPERSAND","line":"25"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$SQ","id":"$SQ","line":"26"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$OPEN_PAREN","id":"$OPEN_PAREN","line":"27"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$CLOSE_PAREN","id":"$CLOSE_PAREN","line":"28"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$STAR","id":"$STAR","line":"29"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$PLUS","id":"$PLUS","line":"30"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$COMMA","id":"$COMMA","line":"31"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$MINUS","id":"$MINUS","line":"32"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$PERIOD","id":"$PERIOD","line":"33"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$SLASH","id":"$SLASH","line":"34"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$0","id":"$0","line":"35"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$1","id":"$1","line":"36"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$2","id":"$2","line":"37"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$3","id":"$3","line":"38"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$4","id":"$4","line":"39"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$5","id":"$5","line":"40"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$6","id":"$6","line":"41"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$7","id":"$7","line":"42"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$8","id":"$8","line":"43"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$9","id":"$9","line":"44"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$COLON","id":"$COLON","line":"45"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$SEMICOLON","id":"$SEMICOLON","line":"46"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$LT","id":"$LT","line":"47"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$EQ","id":"$EQ","line":"48"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$GT","id":"$GT","line":"49"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$QUESTION","id":"$QUESTION","line":"50"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$AT","id":"$AT","line":"51"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$A","id":"$A","line":"52"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$B","id":"$B","line":"53"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$C","id":"$C","line":"54"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$D","id":"$D","line":"55"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$E","id":"$E","line":"56"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$F","id":"$F","line":"57"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$G","id":"$G","line":"58"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$H","id":"$H","line":"59"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$I","id":"$I","line":"60"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$J","id":"$J","line":"61"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$K","id":"$K","line":"62"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$L","id":"$L","line":"63"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$M","id":"$M","line":"64"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$N","id":"$N","line":"65"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$O","id":"$O","line":"66"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$P","id":"$P","line":"67"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$Q","id":"$Q","line":"68"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$R","id":"$R","line":"69"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$S","id":"$S","line":"70"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$T","id":"$T","line":"71"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$U","id":"$U","line":"72"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$V","id":"$V","line":"73"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$W","id":"$W","line":"74"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$X","id":"$X","line":"75"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$Y","id":"$Y","line":"76"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$Z","id":"$Z","line":"77"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$OPEN_SQUARE_BRACKET","id":"$OPEN_SQUARE_BRACKET","line":"78"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$BACKSLASH","id":"$BACKSLASH","line":"79"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$CLOSE_SQUARE_BRACKET","id":"$CLOSE_SQUARE_BRACKET","line":"80"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$CARET","id":"$CARET","line":"81"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$_","id":"$_","line":"82"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$BACKPING","id":"$BACKPING","line":"83"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$a","id":"$a","line":"84"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$b","id":"$b","line":"85"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$c","id":"$c","line":"86"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$d","id":"$d","line":"87"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$e","id":"$e","line":"88"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$f","id":"$f","line":"89"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$g","id":"$g","line":"90"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$h","id":"$h","line":"91"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$i","id":"$i","line":"92"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$j","id":"$j","line":"93"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$k","id":"$k","line":"94"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$l","id":"$l","line":"95"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$m","id":"$m","line":"96"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$n","id":"$n","line":"97"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$o","id":"$o","line":"98"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$p","id":"$p","line":"99"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$q","id":"$q","line":"100"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$r","id":"$r","line":"101"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$s","id":"$s","line":"102"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$t","id":"$t","line":"103"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$u","id":"$u","line":"104"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$v","id":"$v","line":"105"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$w","id":"$w","line":"106"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$x","id":"$x","line":"107"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$y","id":"$y","line":"108"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$z","id":"$z","line":"109"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$OPEN_CURLY_BRACKET","id":"$OPEN_CURLY_BRACKET","line":"110"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$BAR","id":"$BAR","line":"111"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$CLOSE_CURLY_BRACKET","id":"$CLOSE_CURLY_BRACKET","line":"112"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$TILDE","id":"$TILDE","line":"113"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$DEL","id":"$DEL","line":"114"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$NBSP","id":"$NBSP","line":"115"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$LS","id":"$LS","line":"116"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$PS","id":"$PS","line":"117"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$FIRST_SURROGATE","id":"$FIRST_SURROGATE","line":"119"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$LAST_SURROGATE","id":"$LAST_SURROGATE","line":"120"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"$LAST_CODE_POINT","id":"$LAST_CODE_POINT","line":"121"}],"isPrivate":true,"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/dart_import/util/characters.dart","line":"10"},{"superclass":{"name":"Error","refId":"dart.core/Error"},"isThrowable":true,"kind":"class","name":"JsonCyclicError","id":"JsonCyclicError","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"20"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"message","id":"message","line":"18"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"initializedField":{"name":"message","refId":"distributed_dart/JsonCyclicError/message"},"kind":"param","name":"message","id":"message"}],"line":"19"}],"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/errors.dart","line":"17"},{"superclass":{"name":"Error","refId":"dart.core/Error"},"isThrowable":true,"kind":"class","name":"UnsupportedOperationError","id":"UnsupportedOperationError","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"9"},{"isFinal":true,"kind":"variable","name":"message","id":"message","line":"4"},{"kind":"constructor","name":"","id":"1()","comment":"The [message] describes the erroneous argument. ","children":[{"isOptional":true,"initializedField":{"name":"message","refId":"distributed_dart/UnsupportedOperationError/message"},"kind":"param","name":"message","id":"message"}],"line":"7"}],"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/errors.dart","line":"3"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"Exception","refId":"dart.core/Exception"}],"isThrowable":true,"kind":"class","name":"NotSerializableObjectException","id":"NotSerializableObjectException","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"36"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"message","id":"message","line":"34"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"initializedField":{"name":"message","refId":"distributed_dart/NotSerializableObjectException/message"},"kind":"param","name":"message","id":"message"}],"line":"35"}],"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/exceptions.dart","line":"33"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"Exception","refId":"dart.core/Exception"}],"isThrowable":true,"kind":"class","name":"ScannerException","id":"ScannerException","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"30"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"message","id":"message","line":"28"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"initializedField":{"name":"message","refId":"distributed_dart/ScannerException/message"},"kind":"param","name":"message","id":"message"}],"line":"29"}],"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/exceptions.dart","line":"27"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"Exception","refId":"dart.core/Exception"}],"isThrowable":true,"kind":"class","name":"FileNotFoundException","id":"FileNotFoundException","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"24"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"message","id":"message","line":"22"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"initializedField":{"name":"message","refId":"distributed_dart/FileNotFoundException/message"},"kind":"param","name":"message","id":"message"}],"line":"23"}],"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/exceptions.dart","line":"21"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"Exception","refId":"dart.core/Exception"}],"isThrowable":true,"kind":"class","name":"FileChangedException","id":"FileChangedException","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"18"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"message","id":"message","line":"16"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"initializedField":{"name":"message","refId":"distributed_dart/FileChangedException/message"},"kind":"param","name":"message","id":"message"}],"line":"17"}],"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/exceptions.dart","line":"15"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"Exception","refId":"dart.core/Exception"}],"isThrowable":true,"kind":"class","name":"WorkDirInUseException","id":"WorkDirInUseException","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"12"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"message","id":"message","line":"10"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"initializedField":{"name":"message","refId":"distributed_dart/WorkDirInUseException/message"},"kind":"param","name":"message","id":"message"}],"line":"11"}],"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/exceptions.dart","line":"9"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"Exception","refId":"dart.core/Exception"}],"isThrowable":true,"kind":"class","name":"InvalidWorkDirException","id":"InvalidWorkDirException","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"6"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"message","id":"message","line":"4"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"initializedField":{"name":"message","refId":"distributed_dart/InvalidWorkDirException/message"},"kind":"param","name":"message","id":"message"}],"line":"5"}],"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/src/exceptions.dart","line":"3"}],"uri":"file:///home/ubuntu/src/github.com/distributed-dart/distributed_dart/lib/distributed_dart.dart","line":"1"}